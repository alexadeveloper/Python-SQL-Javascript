tests 0-add_integer.py
----------------------

This function adds two integers. 

	>>> add_integer = __import__("0-add_integer").add_integer

    ``add_integer()`` add a ``+`` b

Case 1:
    two integers

	>>> add_integer(3, 5)
	8
        >>>

	>>> print(add_integer(10, 90))
	100
        >>>

--------------------------------------

Case 2:
    Max integer

    >>> add_integer(2147483647, 0)
	2147483647
    >>>

------------------------------------

Case 3:
    Min integer

    >>> add_integer(-2147483647, 0)
    2147483647
    >>>
 
------------------------------------

Case 4:
    Max an min integer

    >>> add_integer(2147483647, -2147483647)
    0
    >>>

---------------------------------------------

Case 5:
    two integers Negative

    >>> add_integer(-10, -5)
    -15
    >>>

-----------------------------

case 6:
    float value (must cast float to int)

    >>> add_integer(70.8, 5)
    75
    >>>

------------------------------------------

Errors
======

Case 1:
    a not is a int or float

    >>> add_integer("Holberton", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>>

-------------------------------------------

Case 2:
    b not is a int or float

    >>> add_integer(10, "b")
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>>

-----------------------------------------

Case 3:
    if the input is none

    >>> add_integer(4, None)
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>>

-----------------------------------------
